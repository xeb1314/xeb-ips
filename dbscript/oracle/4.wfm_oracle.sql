--==============================================================
-- TABLE: WFM_SYSCONFIG
--==============================================================
CREATE TABLE WFM_SYSCONFIG
(
   NAME               varchar(50)            NOT NULL,
   DATA               varchar(500),
   TYPE               INT,
   VIEW_POS int,
   DESCRIPTION          varchar(200),
   CONSTRAINT P_WFM_SYSCONFIG PRIMARY KEY (NAME)
) ;

--==============================================================
-- TABLE: WFM_SOURCE
--==============================================================
CREATE TABLE WFM_DBSOURCE
(
	SRC_ID int NOT NULL,
	SRC_NAME varchar(100),
	DB_TYPE varchar(30),
	DB_NAME varchar(30),
	DB_URL varchar(200),	
	DB_USER varchar(30),
	DB_PASSWORD varchar(30),
	CREATE_USER varchar(50),
	CREATE_USERID int,
	CREATE_TIME DATE DEFAULT SYSDATE,
	STR_1 varchar(100),
	STR_2 varchar(100),
	STR_3 varchar(100),
    CONSTRAINT P_WFM_DBSOURCE PRIMARY KEY(SRC_ID)
);
--==============================================================
-- TABLE: WFM_PROCESSTYPE
--==============================================================

CREATE TABLE WFM_PROCESSTYPE
(
	PROC_TYPE int NOT NULL,
	TYPE_NAME varchar(50) NOT NULL,		
	FIELD_1 varchar(200),
	FIELD_2 varchar(200),
   CONSTRAINT P_WFM_PROCESSTYPE PRIMARY KEY (PROC_TYPE)
) ;


CREATE INDEX INDEX_PROCESSTYPE ON WFM_PROCESSTYPE (TYPE_NAME ASC);
--==============================================================
-- TABLE: WFM_VARIABLE
--==============================================================
create table WFM_VARIABLE
(
	VAR_ID int,
	VAR_NAME varchar(50),
	VAR_VALUE varchar(200),
	VAR_TYPE int,
	VAR_DESC varchar(100),
	FIELD_1 varchar(200),
        CONSTRAINT P_WFM_VARIABLE primary key (VAR_ID)
);
--==============================================================
-- TABLE: WFM_VAREXEC
--==============================================================
create table WFM_VAREXEC
(
	PROCEXEC_ID varchar(50),
	VAR_ID int,	
	VAR_NAME varchar(50),
	VAR_VALUE varchar(200),
	VAR_TYPE int,
    CONSTRAINT P_WFM_VAREXEC primary key (PROCEXEC_ID,VAR_ID)
);
--==============================================================
-- TABLE: WFM_PROCVAR
--==============================================================
CREATE TABLE WFM_PROCVAR(
	PROC_ID int,
	VAR_ID int,
	VAR_NAME varchar(50) ,
	VAR_VALUE varchar(200) ,
	VAR_TYPE int ,
	CONSTRAINT P_WFM_PROCVAR primary key (PROC_ID,VAR_ID)
);

--==============================================================
-- TABLE: WFM_ACTIVITY
--==============================================================
CREATE TABLE WFM_ACTIVITY
(
	ACT_ID INT NOT NULL,
	ACT_NAME varchar(50) NOT NULL,
	ACT_TYPE INT NOT NULL,
	ACT_CLASS INT,
	ACT_ICON varchar(200),
	ACT_DESC varchar(200),
	TIME_LIMIT INT,
	ACTION varchar(500),
	CONCURRENT_NUM INT,
	CREATE_TIME DATE DEFAULT SYSDATE,
	FIELD_1 VARCHAR(200),
   CONSTRAINT P_WFM_ACTIVITY PRIMARY KEY (ACT_ID)
) ;
CREATE INDEX INDEX_ACTIVITY ON WFM_ACTIVITY (ACT_NAME ASC);

--==============================================================
-- TABLE: WFM_PROCESS
--==============================================================
CREATE TABLE WFM_PROCESS
(
	PROC_ID INT NOT NULL,
	PROC_NAME varchar(50) NOT NULL,
	FLOW_TYPE  INT DEFAULT 0 NOT NULL,	
	PROC_TYPE  INT DEFAULT 0  NOT NULL,
	PROC_STATE INT,
	PROC_DESC varchar(300),
	OBJ_TYPE int  DEFAULT 0 NOT NULL,
	CREATE_TIME DATE DEFAULT SYSDATE,
	FIELD_1 VARCHAR(200),
   CONSTRAINT P_WFM_PROCESS PRIMARY KEY (PROC_ID)
) ;

--==============================================================
-- TABLE: WFM_PROCACT
--==============================================================
CREATE TABLE WFM_PROCACT
(
	PROCACT_ID INT NOT NULL,
	PROC_ID INT NOT NULL,
	ACT_ID INT NOT NULL,
	PROCACT_NAME varchar(50),
    PARENT_ID int default 0 not null,
	ACT_PARAM clob,
	FIELD_1 varchar(200),
	PROC_VER INT,
  CONSTRAINT P_WFM_PROCACT PRIMARY KEY (PROCACT_ID)
) ;

--==============================================================
-- TABLE: WFM_ACTPARAM
--==============================================================
CREATE TABLE WFM_ACTPARAM
(
	PARAM_ID INT not null,
	PROCACT_ID Int,
	PARAM_TYPE Int,
	TEMPLATE_NAME varchar(100),
	PARAM_DATA CLOB,
	PARAM_MD5 varchar(50),
	FIELD_1 varchar(200),
    CONSTRAINT P_WFM_ACTPARAM PRIMARY KEY (PARAM_ID)
) ;

--==============================================================
-- TABLE: WFM_TRANSITION
--==============================================================
CREATE TABLE WFM_TRANSITION
(
	PROCACT_ID INT NOT NULL,
	NEXTACT_ID INT,
	TRANS_RULE varchar(200),
	FIELD_1 varchar(200),
   CONSTRAINT P_WFM_TRANSITION PRIMARY KEY (PROCACT_ID,NEXTACT_ID)
) ;

--==============================================================
-- TABLE: WFM_TRANSEXEC
--==============================================================
CREATE TABLE WFM_TRANSEXEC
(
	TASK_ID VARCHAR(50) NOT NULL,
	NEXTTASK_ID VARCHAR(50),
	TRANS_RULE VARCHAR(200),
	FIELD_1 VARCHAR(200),
   CONSTRAINT P_WFM_TRANSEXEC PRIMARY KEY (TASK_ID,NEXTTASK_ID)
) ;


--==============================================================
-- TABLE: WFM_ASSIGNRULE
--==============================================================
CREATE TABLE WFM_ASSIGNRULE
(
	PROCACT_ID INT NOT NULL,
	ASSIGN_TYPE INT,
	ASSIGN_OBJID varchar(50),
	ASSIGN_PARAM varchar(100),
	FIELD_1 varchar(200),
   CONSTRAINT P_WFM_ASSIGNRULE PRIMARY KEY (PROCACT_ID)
) ;

--==============================================================
-- TABLE: WFM_PROCEXEC
--==============================================================
CREATE TABLE WFM_PROCEXEC
(
	PROCEXEC_ID VARCHAR(50) NOT NULL,
	PROC_ID INT NOT NULL,
	PROC_TYPE  INT NOT NULL,
	OBJ_ID VARCHAR(50),
	OBJ_NAME varchar(300),
	OBJ_TYPE INT  DEFAULT 0 NOT NULL,
	NOTIFY_URL varchar(200),
	PARENT_TASKID varchar(50),
	START_USER varchar(50),
	START_USERID VARCHAR(50),
	START_TIME DATE DEFAULT SYSDATE,	
	END_TIME DATE DEFAULT SYSDATE,	
	PROC_STATE INT DEFAULT 1 NOT NULL,
	STATE_DESC varchar(200),
	FIELD_1 varchar(200),
	PROC_VER INT,
   CONSTRAINT P_WFM_PROCEXEC PRIMARY KEY (PROCEXEC_ID)
) ;

--==============================================================
-- TABLE: WFM_PROCLOG
--==============================================================
CREATE TABLE WFM_PROCLOG
(
	PROCEXEC_ID VARCHAR(50) NOT NULL,
	PROC_ID INT NOT NULL,
	PROC_TYPE  INT NOT NULL,
	OBJ_ID VARCHAR(50),
	OBJ_NAME varchar(300),
	OBJ_TYPE INT,
	NOTIFY_URL varchar(200),
	PARENT_TASKID varchar(50),
	START_USER varchar(50),
	START_USERID VARCHAR(50),
	START_TIME DATE DEFAULT SYSDATE,
	END_TIME DATE DEFAULT SYSDATE,
	PROC_STATE INT,
	STATE_DESC varchar(200),
	FIELD_1 varchar(200),
	PROC_VER INT,
   CONSTRAINT P_WFM_PROCLOG PRIMARY KEY (PROCEXEC_ID)
) ;

--==============================================================
-- TABLE: WFM_TASKEXEC
--==============================================================
CREATE TABLE WFM_TASKEXEC
(
	TASK_ID VARCHAR(50) NOT NULL,
	PROCEXEC_ID VARCHAR(50) NOT NULL,
	PROCACT_ID INT NOT NULL,
	ACT_ID INT NOT NULL,
	PROC_TYPE  INT NOT NULL,
	OBJ_ID VARCHAR(50) NOT NULL,
	EXECUTE_USER varchar(50),
	EXECUTE_USERID VARCHAR(50),
	CREATE_USER varchar(50),	
	TASK_STATE INT DEFAULT 0 NOT NULL,
	TASK_PERCENT INT,
	TASK_PARAM varchar(1000),
	TASK_DESC varchar(500),
	BACK_TIMES int,
	EXT_SYSID INT,
	EXT_STATE INT,
	EXT_TASKID VARCHAR(500),
	NEXT_STATE INT,
	NEXT_TASKID VARCHAR(50),
	CREATE_TIME DATE DEFAULT SYSDATE,
	START_TIME DATE DEFAULT SYSDATE,
	END_TIME DATE DEFAULT SYSDATE,
	FIELD_1 varchar(200),
	FIELD_2 varchar(200),
   CONSTRAINT P_WFM_TASKEXEC PRIMARY KEY (TASK_ID)
) ;
CREATE INDEX IX_WFM_TASK_PROC ON WFM_TASKEXEC (
   PROCEXEC_ID         asc
);
--==============================================================
-- TABLE: WFM_TASKLOG
--==============================================================
CREATE TABLE WFM_TASKLOG
(
	TASK_ID VARCHAR(50) NOT NULL,
	PROCEXEC_ID VARCHAR(50) NOT NULL,
	PROCACT_ID INT NOT NULL,
	ACT_ID INT NOT NULL,
	PROC_TYPE  INT NOT NULL,
	OBJ_ID VARCHAR(50) NOT NULL,
	EXECUTE_USER varchar(50),
	EXECUTE_USERID VARCHAR(50),
	CREATE_USER varchar(50),	
	TASK_STATE INT,
	TASK_PERCENT INT,
	TASK_PARAM varchar(1000),
	TASK_DESC varchar(500),
	BACK_TIMES int,
	EXT_SYSID INT,
	EXT_STATE INT,	
	EXT_TASKID VARCHAR(500),
	NEXT_STATE INT,
	NEXT_TASKID VARCHAR(50),
	CREATE_TIME DATE DEFAULT SYSDATE,
	START_TIME DATE DEFAULT SYSDATE,
	END_TIME DATE DEFAULT SYSDATE,
	FIELD_1 varchar(200),
	FIELD_2 varchar(200),
   CONSTRAINT P_WFM_TASKLOG PRIMARY KEY (TASK_ID)
) ;

--==============================================================
-- TABLE: WFM_TASKASSIGN
--==============================================================
CREATE TABLE WFM_TASKASSIGN
(
	TASK_ID VARCHAR(50) NOT NULL,
	EXECUTE_USER varchar(50),
	EXECUTE_USERID VARCHAR(50),
	OBJ_ID VARCHAR(50) NOT NULL,
	FIELD_1 varchar(200),
   CONSTRAINT P_WFM_TASKASSIGN PRIMARY KEY (TASK_ID,EXECUTE_USERID)
) ;

--==============================================================
-- TABLE: WFM_TASKOVER
--==============================================================
CREATE TABLE WFM_TASKOVER
(
	OVER_ID	Varchar(50) NOT NULL,
	TASK_ID	Varchar(50),
	PROCEXEC_ID	Varchar(50),
	PROCACT_ID	INT,
	ACT_ID		INT,
	PROC_TYPE 	INT,
	OBJ_ID		Varchar(50),
	EXECUTE_USER	varchar(50),
	EXECUTE_USERID VARCHAR(50),
	CREATE_USER     varchar(50),
	RECEIVE_USER    varchar(200),
	OLD_STATE	INT,
	OVER_STATE	INT,
	TASK_DESC   varchar(500),
	NTASK_DESC  varchar(500),
	TASK_PARAM  varchar(1000),
	START_TIME  DATE DEFAULT SYSDATE,
	END_TIME	DATE DEFAULT SYSDATE,
	BACK_TIMES  INT DEFAULT 0,
	EXT_SYSID 	INT,
	EXT_STATE 	INT,
	EXT_TASKID      Varchar(50),
	CREATE_TIME      DATE DEFAULT SYSDATE,
	NEXT_STATE      INT,
	NEXT_TASK_ID    Varchar(50),
	FIELD_1		varchar(100),
	CONSTRAINT P_WFM_TASKOVER PRIMARY KEY (OVER_ID)
);


CREATE INDEX IX_WFM_TASK_OVER ON WFM_TASKOVER (
   PROCEXEC_ID         asc
);

--==============================================================
-- TABLE: WFM_PROCVER  ADD 2015-4-8  流程添加版本管理
--==============================================================
CREATE TABLE WFM_PROCVER
(
	PROC_ID INT NOT NULL,
	PROC_VER INT NOT NULL,
	VER_DESC varchar(200),
	CREATE_TIME DATE DEFAULT SYSDATE,
  CONSTRAINT P_WFM_PROCVER PRIMARY KEY (PROC_ID,PROC_VER)
) ;

--==============================================================
-- ADD FOREIGN KEY
--==============================================================
ALTER TABLE WFM_PROCACT
    ADD CONSTRAINT FK_WFM_PROCACT2PROC FOREIGN KEY (PROC_ID) REFERENCES WFM_PROCESS (PROC_ID);

ALTER TABLE WFM_PROCACT
    ADD CONSTRAINT FK_WFM_PROCACT2ACT FOREIGN KEY (ACT_ID) REFERENCES WFM_ACTIVITY (ACT_ID);   

ALTER TABLE WFM_ASSIGNRULE
    ADD CONSTRAINT FK_WFM_RULE2ACT FOREIGN KEY (PROCACT_ID) REFERENCES WFM_PROCACT (PROCACT_ID);   

--declare @ID int ;
--set @ID=4;
--delete from wfm_taskassign where  task_id in (select task_id from wfm_taskexec where procexec_id in (select procexec_id from wfm_procexec where proc_id=@ID));
--delete from wfm_taskexec where procexec_id in (select procexec_id from wfm_procexec where proc_id=@ID);
--delete from wfm_tasklog where procexec_id in (select procexec_id from wfm_proclog where proc_id=@ID);
--delete from wfm_proclog where proc_id=@ID;
--delete from wfm_procexec where proc_id=@ID;


 ---受控词初始
INSERT INTO NET_CTRLWORD (CW_ID,CW_SYS,CW_TYPE,CW_NAME,CW_CODE,CW_DESC)VALUES (2201, 22, -1, '节点分类', '2201', '节点分类');
INSERT INTO NET_CTRLWORD (CW_ID,CW_SYS,CW_TYPE,CW_NAME,CW_CODE,CW_DESC)VALUES (2202, 22, -1, '数据库类型', '2202', '数据库类型');
INSERT INTO NET_CTRLWORD (CW_ID,CW_SYS,CW_TYPE,CW_NAME,CW_CODE,CW_DESC)VALUES (2203, 22, -1, '文件组', '2203', '文件组');

INSERT INTO NET_CTRLWORD (CW_ID,CW_SYS,CW_TYPE,CW_NAME,CW_CODE,CW_DESC)VALUES (2203001, 22, 2203, '编辑版', '1', '');
INSERT INTO NET_CTRLWORD (CW_ID,CW_SYS,CW_TYPE,CW_NAME,CW_CODE,CW_DESC)VALUES (2203002, 22, 2203, '预览版', '30', '');


INSERT INTO NET_CTRLWORD (CW_ID,CW_SYS,CW_TYPE,CW_NAME,CW_CODE,CW_DESC)VALUES (2201001, 22, 2201, '监测', '', '');
INSERT INTO NET_CTRLWORD (CW_ID,CW_SYS,CW_TYPE,CW_NAME,CW_CODE,CW_DESC)VALUES (2201002, 22, 2201, '媒体处理', '', '');
INSERT INTO NET_CTRLWORD (CW_ID,CW_SYS,CW_TYPE,CW_NAME,CW_CODE,CW_DESC)VALUES (2201003, 22, 2201, '人工处理', '', '');
INSERT INTO NET_CTRLWORD (CW_ID,CW_SYS,CW_TYPE,CW_NAME,CW_CODE,CW_DESC)VALUES (2201004, 22, 2201, '流程控制', '', '');
INSERT INTO NET_CTRLWORD (CW_ID,CW_SYS,CW_TYPE,CW_NAME,CW_CODE,CW_DESC)VALUES (2201005, 22, 2201, '消息处理', '', '');
INSERT INTO NET_CTRLWORD (CW_ID,CW_SYS,CW_TYPE,CW_NAME,CW_CODE,CW_DESC) VALUES (200101, 22, 2201, '数据源', '', '');
INSERT INTO NET_CTRLWORD (CW_ID,CW_SYS,CW_TYPE,CW_NAME,CW_CODE,CW_DESC) VALUES (200102, 22, 2201, '数据处理', '', '');
INSERT INTO NET_CTRLWORD (CW_ID,CW_SYS,CW_TYPE,CW_NAME,CW_CODE,CW_DESC) VALUES (200103, 22, 2201, '数据入库', '', '');

INSERT INTO NET_CTRLWORD (CW_ID,CW_SYS,CW_TYPE,CW_NAME,CW_CODE,CW_DESC)VALUES (2202001, 22, 2202, 'SQLSERVER', 'SQLSERVER', 'SQLSERVER');
INSERT INTO NET_CTRLWORD (CW_ID,CW_SYS,CW_TYPE,CW_NAME,CW_CODE,CW_DESC)VALUES (2202002, 22, 2202, 'ORACLE', 'ORACLE', '');

INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(531,'扫描',3,2201001,'扫描','FileScanStrategy',0);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(5001,'迁移',2,2201002,'将入库文件迁移至媒资盘阵中','FileTransfer',30);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(5201,'打包',2,2201002,'TE工程文件序列打包输出','FilePackage',30);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(5020,'MD5计算',2,2201002,'计算文件MD5','FileMd5',30);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(5050,'压缩',2,2201002,'压缩文件','FileAction',30);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(5060,'解压缩',2,2201002,'解压缩文件','FileAction',30);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(5212,'媒体信息提取',2,2201002,'提取媒体文件信息','MediaInfo',30);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(5200,'转码',2,2201002,'将入库文件转换码率','FileTranseCode',30);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(5401,'关键帧提取',2,2201002,'从文件中提取关键帧','KeyFrameDetect',30);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(5400,'自动技审',2,2201002,'对文件进行检测','QualityCheck',30);
--INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(5501,'视频检索',2,2201002,'按文件特征检索相关视频','FeatureQuery',30);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(5211,'媒体剪辑',2,2201002,'媒体文件剪辑','MediaCut',30);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(5220,'媒体比较',2,2201002,'媒体文件比较','MediaCompare',30);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(5213,'媒体索引生成',2 ,2201002,'对视频文件创建创建索引', 'MediaIdx', 30);

INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,CONCURRENT_NUM) VALUES(10001,'顺序流',10,2201004,'节点容器，一般的节点容器中首先应包含顺序流',0);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,CONCURRENT_NUM) VALUES(10101,'条件',11,2201004,'两个分支，二选一',0);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,CONCURRENT_NUM) VALUES(10201,'并行',12,2201004,'一个或多个分支，执行满足条件的分支',0);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,CONCURRENT_NUM) VALUES(10301,'侦听',13,2201004,'一个或多个分支，抢占式选择单一分支',0);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,CONCURRENT_NUM) VALUES(10401,'循环',14,2201004,'按条件循环执行指定次数',0);

INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(9001,'服务调用',2,2201005,'调用指定的WebService','ServiceRequest',0);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(9002,'HTTP请求',2,2201005,'调用指定的HTTP','HttpRequest',0);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(9003,'HTTP执行',2,2201005,'调用指定的HTTP，创建任务，查询任务状态','HttpExecutor',0);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(9101,'子流程',2,2201004,'在流程中启动指定的子流程','SubWorkflow',0);
--INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(9201,'延迟',2,2201004,'延迟任务的执行','DelayTask',10);

INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,CONCURRENT_NUM) VALUES(1,'文件入库',1,2201003,'将文件入库，生成节目',0);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,CONCURRENT_NUM) VALUES(11,'文件审核',1,2201003,'对入库的文件进行审核',0);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,CONCURRENT_NUM) VALUES(21,'一次编目',1,2201003,'节目一次编目',0);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,CONCURRENT_NUM) VALUES(22,'二次编目',1,2201003,'节目二次编目',0);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,CONCURRENT_NUM) VALUES(23,'三次编目',1,2201003,'节目三次编目',0);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,CONCURRENT_NUM) VALUES(31,'一次审核',1,2201003,'节目一次审核',0);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,CONCURRENT_NUM) VALUES(32,'二次审核',1,2201003,'节目二次审核',0);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,CONCURRENT_NUM) VALUES(33,'三次审核',1,2201003,'节目三次审核',0);
 
INSERT INTO WFM_VARIABLE ( VAR_ID , VAR_NAME , VAR_TYPE , VAR_DESC ) VALUES ( 1 , '@filePath' , 0 , '文件路径' );
INSERT INTO WFM_VARIABLE ( VAR_ID , VAR_NAME , VAR_TYPE , VAR_DESC ) VALUES ( 2 , '@fileName' , 0 , '文件名' );
INSERT INTO WFM_VARIABLE ( VAR_ID , VAR_NAME , VAR_TYPE , VAR_DESC ) VALUES ( 3 , '@fileSize' , 1 , '文件大小' );
INSERT INTO WFM_VARIABLE ( VAR_ID , VAR_NAME , VAR_TYPE , VAR_DESC ) VALUES ( 4 , '@fileFormat', 0 , '文件格式' );

INSERT INTO NET_SEQUENCE (TABLE_NAME, SERIAL_NUMBER) VALUES ('WFM_VARIABLE', 5);

-- WFM_ACTIVITY[ips];
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(802,'口令下载数据源',3,200101,'口令下载数据源','PassWordStrategy',10);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(803,'身份认证数据源',3,200101,'身份认证数据源','IdentityStrategy',10);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(8001,'IPS文件迁移',2,200102,'IPS文件迁移','IpsFileTransfer',NULL);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(8020,'IPSMD5计算',2,200102,'IPSMD5计算','IpsFileMd5',NULL);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(541,'Eml解析',2,200102,'Eml解析','EmlParseMtc',NULL);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(801,'邮件数据源',3,200101,'邮件数据源','EmlStrategy',10);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(800,'邮件数据源2',3,200101,'邮件数据源2','EmlStrategyExt',10);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(810,'文件数据源',3,200101,'文件数据源','FileParseMtc',10);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM,TIME_LIMIT) VALUES(804,'信息抽取',2,200102,'信息抽取','PLOText',NULL,600000);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM,TIME_LIMIT) VALUES(805,'文本分类',2,200102,'文本分类','CATClassifyText',NULL,600000);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM,TIME_LIMIT) VALUES(806,'文本聚类',2,200102,'文本聚类','ClusterDocGraph',NULL,600000);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM,TIME_LIMIT) VALUES(807,'自动摘要',2,200102,'自动摘要','ABSText',NULL,600000);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(890,'邮件入库',2,200103,'邮件入库','FileImportExtendDB',NULL);

INSERT INTO WFM_PROCESSTYPE (PROC_TYPE, TYPE_NAME) VALUES (1, '入库节目');
INSERT INTO WFM_PROCESSTYPE (PROC_TYPE, TYPE_NAME) VALUES (2, '编目节目');
INSERT INTO WFM_PROCESSTYPE (PROC_TYPE, TYPE_NAME) VALUES (3, 'test');
INSERT INTO WFM_PROCESSTYPE (PROC_TYPE, TYPE_NAME) VALUES (10, '数据处理模版 ');
INSERT INTO WFM_PROCESSTYPE (PROC_TYPE, TYPE_NAME) VALUES (11, '数据处理流程');

--add by  xueenbin 20150319

INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(808,'话音数据源',3,200101,'话音数据源','VoiceStrategy',10);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(811,'传真数据源',3,200101,'传真数据源','FAXStrategy',10);

--add by xueenbin 20150407
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(812,'文本数据源',3,200101,'文本数据源','TxtStrategy',10);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(813,'文本解析',2,200102,'文本解析','TxtParseMtc',30);

--add by JiJie.LianG 2015-04-10
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(891,'文本入库',2,200103,'文本入库','DocumentImportExtendDB',10);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM,TIME_LIMIT) VALUES(814,'相似性检索',2,200102,'相似性检索','SimSearch',30,600000);

--add by JiJie.LianG 2015-04-24
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(550,'文种识别',2,200102,'文种识别Worker','LangCodeMtc',10);

-- Add By JiJie.LianG 2015-05-13
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(815,'IP数据源',3,200101,'IP数据源','IPDataStrategy',10);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(560,'IP数据抽取',2,200102,'IP数据抽取Worker','IPDataProcessMtc',10);

INSERT INTO WFM_PROCVER (PROC_ID,PROC_VER ) SELECT PROC_ID,1 FROM WFM_PROCESS;

-- Add By JiJie.LianG 2015-07-21
INSERT INTO WFM_VARIABLE ( VAR_ID , VAR_NAME , VAR_VALUE , VAR_TYPE , VAR_DESC ) VALUES ( 5 , '@EML' , 0 , 0 , '邮件801' );
INSERT INTO WFM_VARIABLE ( VAR_ID , VAR_NAME , VAR_VALUE , VAR_TYPE , VAR_DESC ) VALUES ( 6 , '@TXT' , 0 , 0 , '文本812' );
INSERT INTO WFM_VARIABLE ( VAR_ID , VAR_NAME , VAR_VALUE , VAR_TYPE , VAR_DESC ) VALUES ( 7 , '@VOICE' , 0 , 0 , '话音808' );
INSERT INTO WFM_VARIABLE ( VAR_ID , VAR_NAME , VAR_VALUE , VAR_TYPE , VAR_DESC ) VALUES ( 8 , '@KL', 0 , 0 , '口令802' );
INSERT INTO WFM_VARIABLE ( VAR_ID , VAR_NAME , VAR_VALUE , VAR_TYPE , VAR_DESC ) VALUES ( 9 , '@RZ', 0 , 0 , '认证803' );
INSERT INTO WFM_VARIABLE ( VAR_ID , VAR_NAME , VAR_VALUE , VAR_TYPE , VAR_DESC ) VALUES ( 10 , '@FAX', 0 , 0 , '传真811' );

--INSERT INTO NET_SEQUENCE (TABLE_NAME, SERIAL_NUMBER) VALUES ('WFM_VARIABLE', 11);

-- Add By Xue En Bin 2015-10-10
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(892,'话音入库',2,200103,'话音入库','VoiceImportExtendDB',30);
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(893,'传真入库',2,200103,'传真入库','FAXImportExtendDB',10);

-- Add By Xue En Bin 2015-10-27
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(809,'告警',2,200102,'告警','Alarm',30);

-- Add By Xue En Bin 2015-11-11
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(894,'传真解码',2,200102,'传真解码worker','FAXCodeMtc',10);

-- Add By Xue En Bin 2016-03-24
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(816,'文本数据源2',3,200101,'文本数据源2','TxtStrategyExt',10);

-- Add By Xue En Bin 2016-05-18
INSERT INTO WFM_ACTIVITY(ACT_ID,ACT_NAME,ACT_TYPE,ACT_CLASS,ACT_DESC,ACTION,CONCURRENT_NUM) VALUES(896,'新时代邮件入库',2,200103,'邮件入库','XSDmaiImportExtendDB',10);

commit;


