//lixiaomin 2009-12-10//=============================================================================// 浏览器插件//=============================================================================	 jetsennet.addLoadedUri(jetsennet.getloadUri("plugins"));jetsennet.registerNamespace("jetsennet.Plugins");jetsennet.registerNamespace("jetsennet.Plugins.DvnClient");jetsennet.registerNamespace("jetsennet.Plugins.MamClient");jetsennet.Plugins.createMamClient = function(container,id){    if(!container) container =document.body;    if (IS_MAC)    {          if(IS_SAFARI)        {            var objClient = document.createElement("embed");            objClient.id =id?id: "jetsen-plugins-client";            objClient.type="application/x-oleobject";            objClient.style.width ="1px";            objClient.style.height ="1px";            document.body.appendChild(objClient);        }        else        {            var objClient = document.createElement("embed");            objClient.id =id?id: "jetsen-plugins-client";            objClient.type="application/jnet-player-plugin";            objClient.style.width ="1px";            objClient.style.height ="1px";            objClient.autoplay = "no";	            objClient.loop = "no";            objClient.toolbar = "yes";                        document.body.appendChild(objClient);        }    }                   else    {                   var _id=id?id: "jetsen-plugins-client";//        var _codeBase=jetsennet.baseUrl+"../plugins/"+"jdvnauxxclientwin.exe#version=1,0,0,16";        var _classid="clsid:FC0E1976-075D-4D5C-A80D-01BCB2437D87";        if(!container)        {            container=document.createElement("div");            container.style.display="none";             document.body.appendChild(container);        }        container.innerHTML='<object id="'+_id+'"  classid="'+_classid+'" type="application/x-oleobject" viewastext="viewastext"></object>';       }};jetsennet.Plugins.createDvnClient = function(container,id){    if (IS_MAC)    {          if(IS_SAFARI)        {            var objClient = document.createElement("embed");            objClient.id =id?id: "jetsen-plugins-client";            objClient.type="application/x-oleobject";            objClient.style.width ="1px";            objClient.style.height ="1px";            document.body.appendChild(objClient);        }        else        {            var objClient = document.createElement("embed");            objClient.id = id?id: "jetsen-plugins-client";            objClient.type="application/jdvn-client-plugin" ;                       objClient.style.width ="1px";            objClient.style.height ="1px";            objClient.autoplay = "no";	            objClient.loop = "no";            objClient.toolbar = "yes";                        document.body.appendChild(objClient);        }    }                   else    {                var _id=id?id: "jetsen-plugins-client";//        var _codeBase=jetsennet.baseUrl+"../plugins/"+"jdvnauxxclientwin.exe#version=1,0,0,16";        var _classid="clsid:FC0E1976-075D-4D5C-A80D-01BCB2437D87";        if(!container)        {            container=document.createElement("div");            container.style.display="none";             document.body.appendChild(container);        }        container.innerHTML='<object id="'+_id+'"  classid="'+_classid+'" type="application/x-oleobject" viewastext="viewastext"></object>';       }};jetsennet.Plugins.getFileSize = function(filePath,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	return plugin.RetrieveFileSize(filePath);    }    catch (e)    {    	jQuery.message("插件故障!");        return;    } };jetsennet.Plugins.copyFile = function(fileXml,callbackFunction, isShowProc,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {    	jQuery.message("缺少插件!");        return;    }    try    {    	isShowProc = isShowProc ? isShowProc : 1;        return plugin.CopyFile(fileXml, callbackFunction, isShowProc);    }    catch (e)    {    	jQuery.message("插件故障!");        return "";    }};//写文件jetsennet.Plugins.saveAsFile = function(content,dstPath,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {        return plugin.SaveAsFile(content,dstPath);    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }};jetsennet.Plugins.getHDInfo = function(dstPath,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {        return plugin.GetHDSize(dstPath);    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }};jetsennet.Plugins.getPathInfo = function(dstPath,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {        return plugin.BrowsePath(dstPath);    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }};jetsennet.Plugins.copyDirectory = function(srcPath,dstPath,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_SAFARI)        {            return plugin.DragFile(srcPath,dstPath,1);        }        else        {            return plugin.CopyDir(srcPath,dstPath);        }    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }   };jetsennet.Plugins.deleteFile = function(fileName,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {        return plugin.DeleteFile(fileName);    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }};jetsennet.Plugins.deleteDirectory = function(directoryName,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {        return plugin.RemoveDirOFile(directoryName);    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }};jetsennet.Plugins.createDirectory = function(directoryName,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {        return plugin.MakeDirRecur(directoryName);    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }};jetsennet.Plugins.dragFile = function(filePath,mode,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if (IS_MAC)       	{       	    if(IS_SAFARI)            {                //mode:1是拷贝2 移动                return plugin.DragFile(filePath,mode);            }            else            {    			return plugin.DragFile(filePath);    		}        }    	else    	{    		return plugin.DragFile(filePath,mode);    	}    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }};jetsennet.Plugins.openFileDialog = function(callBackFunction,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_SAFARI)        {    		//return <FILEINFO type='1'><FILE><FILE_PATH>XXX.mov</FILE_PATH><FILE_SIZE>22478350</FILE_SIZE><FILE_TYPE>0</FILE_TYPE></FILE></FILEINFO>, 失败返回空            return plugin.OpenFileDialog(callBackFunction,1,true);        }        else        {            return plugin.OpenFileDialog();        }    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }      };//打开文件夹选择框jetsennet.Plugins.openDirectory = function(callBackFunction,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_SAFARI)        {    		//return <FILEINFO type='1'><FILE><FILE_PATH>XXX.mov</FILE_PATH><FILE_SIZE>22478350</FILE_SIZE><FILE_TYPE>0</FILE_TYPE></FILE></FILEINFO>, 失败返回空            return plugin.OpenFileDialog(callBackFunction,2,false);        }        else        {            return plugin.openFileDialog();        }    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }     };jetsennet.Plugins.getFileMD5 = function(fileName){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {        return plugin.RetrieveFileMD5(fileName);    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    } };jetsennet.Plugins.execCmd = function(cmdText,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_SAFARI)        {            plugin.jsStringPara1=cmdText;                plugin.jsIntPara1 = 1; //flags:0-Async; 1-Sync; 2-Sync RegEx                 return plugin.ExecCmdLineByDirectCall();        }        else        {            return plugin.ExecCmd(cmdText);        }    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }     };jetsennet.Plugins.isExistFile = function(fileName,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }        try    {    	return plugin.IsFileExist(fileName);    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }    };jetsennet.Plugins.importClip2Editor = function(name,filePath,mode,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_SAFARI)        {            plugin.jsStringPara1=filePath;//fcp            plugin.jsStringPara2=name;    //mov            return plugin.ImportClip2Fcp();        }        else        {            return plugin.ImportClip2Editor(name,filePath,mode)        }    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }    };jetsennet.Plugins.getMediaInfo = function(filePath,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_MAC)    	{            if(IS_SAFARI)            {                plugin.jsStringPara1=filePath;       	        return plugin.GetMediaInfo();    	    }    	    else    	    {    		    return plugin.GetMediaInfo(filePath)    		}    	}    	else     	{    		return "";    	}    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }	};jetsennet.Plugins.grabMovieFirstFrame = function(filePath,iconPath,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_MAC)    	{    		return plugin.GrabMovieFirstFrame(filePath,iconPath);    	}    	else     	{    		return -1;    	}    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }	};jetsennet.Plugins.importClip2Fcp = function(fcpPath,clipPath,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_MAC)    	{            if(IS_SAFARI)            {                plugin.jsStringPara1=fcpPath;                 plugin.jsStringPara2=clipPath;      	        return plugin.ImportClip2Fcp();    	    }    	    else    	    {    		    return plugin.ImportClip2Fcp(fcpPath,clipPath)    		}    	}		    	else     	{    		return -1;    	}    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }};jetsennet.Plugins.listPathFilesByFlag = function(path,includeSubDir,flag,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_MAC)    	{    	    if(IS_SAFARI)    	    {    	    	//includeSubDir 1:遍历子文件夹，2：不遍历子文件夹    	    	//flag 过滤后缀 如：.DOC;.DOCX;.TXT  分号分隔    	        includeSubDir = includeSubDir ? includeSubDir : 1;                return plugin.ListPathFiles(path, parseInt(includeSubDir), flag);    	    }    	    else    	    {    	    	//flag：0x1-only search for mov; 0x2-Exclude Program,public folder; 0x4-Exclude Products folder    			//includeSubDir：	includeSubDir - 0-No; 1-Yes    			//return <dirFiles><file><filepath></filepath><size>42.30KB</size><bytesize>43311</bytesize></file></dirFiles>, 失败返回空       		    return plugin.ListPathFilesByFlag(path,includeSubDir,flag);    		}    	}    	else     	{    		includeSubDir = includeSubDir ? includeSubDir : 1;            return plugin.ListPathFiles(path, parseInt(includeSubDir), flag);    	}    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }	};jetsennet.Plugins.listPathFiles = function(path,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }	var flag=0;	var includeSubDir = 1;	try    {		if(IS_MAC)		{		    if(IS_SAFARI)		    {   	            return plugin.ListPathFiles(path, parseInt(includeSubDir));		    }		    else		    {		    	//flag：0x1-only search for mov; 0x2-Exclude Program,public folder; 0x4-Exclude Products folder				//includeSubDir：	includeSubDir - 0-No; 1-Yes				//return <dirFiles><file><filepath></filepath><size>42.30KB</size><bytesize>43311</bytesize></file></dirFiles>, 失败返回空          			    return plugin.ListPathFiles(path,includeSubDir,flag);			}		}		else 		{			return false;		}    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }	};jetsennet.Plugins.doMediaTask = function(filePath,framePath,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_MAC)    	{            if(IS_SAFARI)            {                plugin.jsStringPara1=filePath;                 plugin.jsStringPara2=framePath;      	        return plugin.DoMediaTask();    	    }    	    else    	    {    		    return plugin.DoMediaTask(filePath,framePath);    		}    	}				    	else     	{    		return "";    	}    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    } };jetsennet.Plugins.listPathDirs = function(directoryPath,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_SAFARI)        {            plugin.jsStringPara1=directoryPath;      	    return plugin.ListPathDirs();    	}    	else    	{    	    return plugin.ListPathDirs(directoryPath);    	}    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }      	};jetsennet.Plugins.parseFcpSeqXml = function(filePath,type,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_SAFARI)        {            plugin.jsStringPara1=filePath;      	    return plugin.ParseFcpSeqXml();    	}    	else    	{    	    return plugin.ParseFcpSeqXml(filePath,type);    	}	    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }    };jetsennet.Plugins.qtPlayFile = function(filePath,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_SAFARI)        {            plugin.jsStringPara1=filePath;      	    return plugin.QTPlayFile();    	}    	else    	{    	    return plugin.QTPlayFile(filePath);    	}	    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }    	};jetsennet.Plugins.modifyFcpSeqName = function(fcpPath,seqName,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_SAFARI)        {            plugin.jsStringPara1=fcpPath;              plugin.jsStringPara2=seqName;      	    return plugin.ModifyFcpSeqName();    	}    	else    	{    	    return plugin.ModifyFcpSeqName(fcpPath,seqName);    	}	    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }    };jetsennet.Plugins.execCmdLineByDirectCall = function(cmdLine,flags,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_SAFARI)        {            plugin.jsStringPara1 = cmdLine;                plugin.jsIntPara1 = !jetsennet.Util.isNullOrEmpty(flags)?flags:2; //flags:0-Async; 1-Sync; 2-Sync RegEx                 return plugin.ExecCmdLineByDirectCall();        }        else        {            return plugin.ExecCmdLineByDirectCall(cmdLine,flags);        }    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }};jetsennet.Plugins.exportAXIF = function(fcpPath,axifPath,id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_SAFARI)        {            plugin.jsStringPara1=fcpPath;                plugin.jsStringPara2 = axifPath;                 return plugin.ExportAXIF();        }        else        {            return plugin.ExportAXIF(fcpPath,axifPath);        }    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }    };jetsennet.Plugins.getUserName = function(id){    var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_SAFARI)        {             return plugin.GetUserName();        }        else        {            return "";        }    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }    };jetsennet.Plugins.readFileContents = function(filePath, id){	var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	if(IS_SAFARI)        {             return plugin.ReadFileContents(filePath);        }        else        {            return "";        }    }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }    };jetsennet.Plugins.stopCopyFile = function(id){	var plugin = id?el(id):el("jetsen-plugins-client");    if(plugin==null)    {        jQuery.message("缺少插件!");        return;    }    try    {    	return plugin.StopCopyFile();       }    catch (e)    {    	jQuery.message("插件故障!");    	return;    }    }