/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.wfm.schema.Variable.java
 * 日 期：Thu Oct 09 15:09:00 CST 2014
 */
package jetsennet.wfm.schema;

import java.io.Serializable;

import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * WFM_VARIABLE
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "WFM_VARIABLE", keyGenerator = "jetsennet.orm.executor.keygen.KeyGenerationNetSequence")
public class Variable implements Serializable
{

    private static final long serialVersionUID = 1L;

    public static String PROP_FIELD_1 = "FIELD_1";
    public static String PROP_VAR_DESC = "VAR_DESC";
    public static String PROP_VAR_ID = "VAR_ID";
    public static String PROP_VAR_NAME = "VAR_NAME";
    public static String PROP_VAR_TYPE = "VAR_TYPE";
    public static String PROP_VAR_VALUE = "VAR_VALUE";

    /**
     * primary key field of varId
     */
    @FieldMapping(columnName = "VAR_ID", columnType = 4, primary = true)
    private Integer varId;
    @FieldMapping(columnName = "FIELD_1", columnType = 12)
    private String field1;
    @FieldMapping(columnName = "VAR_DESC", columnType = 12)
    private String varDesc;
    @FieldMapping(columnName = "VAR_NAME", columnType = 12)
    private String varName;
    @FieldMapping(columnName = "VAR_TYPE", columnType = 4)
    private Integer varType;
    @FieldMapping(columnName = "VAR_VALUE", columnType = 12)
    private String varValue;

    public Variable()
    {
        super();
    }

    public Variable(Integer varId)
    {
        this.varId = varId;
    }

    /**
     * @return the field1
     */
    public String getField1()
    {
        return this.field1;
    }

    /**
     * @param field1 the field1 to set
     */
    public void setField1(String field1)
    {
        this.field1 = field1;
    }

    /**
     * @return the varDesc
     */
    public String getVarDesc()
    {
        return this.varDesc;
    }

    /**
     * @param varDesc the varDesc to set
     */
    public void setVarDesc(String varDesc)
    {
        this.varDesc = varDesc;
    }

    /**
     * @return the varId
     */
    public Integer getVarId()
    {
        return this.varId;
    }

    /**
     * @param varId the varId to set
     */
    public void setVarId(Integer varId)
    {
        this.varId = varId;
    }

    /**
     * @return the varName
     */
    public String getVarName()
    {
        return this.varName;
    }

    /**
     * @param varName the varName to set
     */
    public void setVarName(String varName)
    {
        this.varName = varName;
    }

    /**
     * @return the varType
     */
    public Integer getVarType()
    {
        return this.varType;
    }

    /**
     * @param varType the varType to set
     */
    public void setVarType(Integer varType)
    {
        this.varType = varType;
    }

    /**
     * @return the varValue
     */
    public String getVarValue()
    {
        return this.varValue;
    }

    /**
     * @param varValue the varValue to set
     */
    public void setVarValue(String varValue)
    {
        this.varValue = varValue;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object o)
    {
        if ((o == null) || !(o instanceof Variable))
        {
            return false;
        }
        Variable other = (Variable) o;
        if (null == this.varId)
        {
            if (other.varId != null)
                return false;
        }
        else if (!this.varId.equals(other.varId))
            return false;
        return true;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode()
    {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((varId == null) ? 0 : varId.hashCode());
        return result;
    }

}
