/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.wfm.schema.Proclog.java
 * 日 期：Thu Oct 09 15:08:58 CST 2014
 */
package jetsennet.wfm.schema;

import java.io.Serializable;
import java.util.Date;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * WFM_PROCLOG
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "WFM_PROCLOG", keyGenerator = "java.util.UUID")
public class Proclog implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_END_TIME = "END_TIME";
	public static String PROP_FIELD_1 = "FIELD_1";
	public static String PROP_NOTIFY_URL = "NOTIFY_URL";
	public static String PROP_OBJ_ID = "OBJ_ID";
	public static String PROP_OBJ_NAME = "OBJ_NAME";
	public static String PROP_OBJ_TYPE = "OBJ_TYPE";
	public static String PROP_PARENT_TASKID = "PARENT_TASKID";
	public static String PROP_PROCEXEC_ID = "PROCEXEC_ID";
	public static String PROP_PROC_ID = "PROC_ID";
	public static String PROP_PROC_STATE = "PROC_STATE";
	public static String PROP_PROC_TYPE = "PROC_TYPE";
	public static String PROP_START_TIME = "START_TIME";
	public static String PROP_START_USER = "START_USER";
	public static String PROP_START_USERID = "START_USERID";
	public static String PROP_STATE_DESC = "STATE_DESC";
	public static String PROP_PROC_VER = "PROC_VER";
	
	/**
	 * primary key field of procexecId
	 */
	@FieldMapping(columnName = "PROCEXEC_ID", columnType = 12, primary = true)
	private String procexecId;
	@FieldMapping(columnName = "END_TIME", columnType = 93)
	private Date endTime;
	@FieldMapping(columnName = "FIELD_1", columnType = 12)
	private String field1;
	@FieldMapping(columnName = "NOTIFY_URL", columnType = 12)
	private String notifyUrl;
	@FieldMapping(columnName = "OBJ_ID", columnType = 12)
	private String objId;
	@FieldMapping(columnName = "OBJ_NAME", columnType = 12)
	private String objName;
	@FieldMapping(columnName = "OBJ_TYPE", columnType = 4)
	private Integer objType;
	@FieldMapping(columnName = "PARENT_TASKID", columnType = 12)
	private String parentTaskid;
	@FieldMapping(columnName = "PROC_ID", columnType = 4)
	private Integer procId;
	@FieldMapping(columnName = "PROC_STATE", columnType = 4)
	private Integer procState;
	@FieldMapping(columnName = "PROC_TYPE", columnType = 4)
	private Integer procType;
	@FieldMapping(columnName = "START_TIME", columnType = 93)
	private Date startTime;
	@FieldMapping(columnName = "START_USER", columnType = 12)
	private String startUser;
	@FieldMapping(columnName = "START_USERID", columnType = 12)
	private String startUserid;
	@FieldMapping(columnName = "STATE_DESC", columnType = 12)
	private String stateDesc;
	@FieldMapping(columnName = "PROC_VER", columnType = 4)
    private Integer procVer;
	
	public Proclog() {
		super();
	}

	public Proclog(String procexecId) {
		this.procexecId = procexecId;
	}

	public Proclog(Date endTime, Integer procId, Integer procType, Date startTime) {
		this.endTime = endTime;
		this.procId = procId;
		this.procType = procType;
		this.startTime = startTime;
	}

	/**
	 * @return the endTime
	 */
	public Date getEndTime() {
		return this.endTime;
	}
	
	/**
	 * @param endTime the endTime to set
	 */
	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	/**
	 * @return the field1
	 */
	public String getField1() {
		return this.field1;
	}
	
	/**
	 * @param field1 the field1 to set
	 */
	public void setField1(String field1) {
		this.field1 = field1;
	}

	/**
	 * @return the notifyUrl
	 */
	public String getNotifyUrl() {
		return this.notifyUrl;
	}
	
	/**
	 * @param notifyUrl the notifyUrl to set
	 */
	public void setNotifyUrl(String notifyUrl) {
		this.notifyUrl = notifyUrl;
	}

	/**
	 * @return the objId
	 */
	public String getObjId() {
		return this.objId;
	}
	
	/**
     * @return the procVer
     */
    public Integer getProcVer() {
        return this.procVer;
    }
    
    /**
     * @param procVer the procVer to set
     */
    public void setProcVer(Integer procVer) {
        this.procVer = procVer;
    }
	
	/**
	 * @param objId the objId to set
	 */
	public void setObjId(String objId) {
		this.objId = objId;
	}

	/**
	 * @return the objName
	 */
	public String getObjName() {
		return this.objName;
	}
	
	/**
	 * @param objName the objName to set
	 */
	public void setObjName(String objName) {
		this.objName = objName;
	}

	/**
	 * @return the objType
	 */
	public Integer getObjType() {
		return this.objType;
	}
	
	/**
	 * @param objType the objType to set
	 */
	public void setObjType(Integer objType) {
		this.objType = objType;
	}

	/**
	 * @return the parentTaskid
	 */
	public String getParentTaskid() {
		return this.parentTaskid;
	}
	
	/**
	 * @param parentTaskid the parentTaskid to set
	 */
	public void setParentTaskid(String parentTaskid) {
		this.parentTaskid = parentTaskid;
	}

	/**
	 * @return the procexecId
	 */
	public String getProcexecId() {
		return this.procexecId;
	}
	
	/**
	 * @param procexecId the procexecId to set
	 */
	public void setProcexecId(String procexecId) {
		this.procexecId = procexecId;
	}

	/**
	 * @return the procId
	 */
	public Integer getProcId() {
		return this.procId;
	}
	
	/**
	 * @param procId the procId to set
	 */
	public void setProcId(Integer procId) {
		this.procId = procId;
	}

	/**
	 * @return the procState
	 */
	public Integer getProcState() {
		return this.procState;
	}
	
	/**
	 * @param procState the procState to set
	 */
	public void setProcState(Integer procState) {
		this.procState = procState;
	}

	/**
	 * @return the procType
	 */
	public Integer getProcType() {
		return this.procType;
	}
	
	/**
	 * @param procType the procType to set
	 */
	public void setProcType(Integer procType) {
		this.procType = procType;
	}

	/**
	 * @return the startTime
	 */
	public Date getStartTime() {
		return this.startTime;
	}
	
	/**
	 * @param startTime the startTime to set
	 */
	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	/**
	 * @return the startUser
	 */
	public String getStartUser() {
		return this.startUser;
	}
	
	/**
	 * @param startUser the startUser to set
	 */
	public void setStartUser(String startUser) {
		this.startUser = startUser;
	}

	/**
	 * @return the startUserid
	 */
	public String getStartUserid() {
		return this.startUserid;
	}
	
	/**
	 * @param startUserid the startUserid to set
	 */
	public void setStartUserid(String startUserid) {
		this.startUserid = startUserid;
	}

	/**
	 * @return the stateDesc
	 */
	public String getStateDesc() {
		return this.stateDesc;
	}
	
	/**
	 * @param stateDesc the stateDesc to set
	 */
	public void setStateDesc(String stateDesc) {
		this.stateDesc = stateDesc;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof Proclog)) {
			return false;
		}
		Proclog other = (Proclog)o;
		if (null == this.procexecId) {
			if (other.procexecId != null)
				return false;
		} else if (!this.procexecId.equals(other.procexecId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((procexecId == null) ? 0 : procexecId.hashCode());
		return result;
	}
	
}