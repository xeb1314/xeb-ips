/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.wfm.schema.Transition.java
 * 日 期：Thu Oct 09 15:09:00 CST 2014
 */
package jetsennet.wfm.schema;

import java.io.Serializable;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * WFM_TRANSITION
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "WFM_TRANSITION", keyOrder = "nextactId,procactId")
public class Transition implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_FIELD_1 = "FIELD_1";
	public static String PROP_NEXTACT_ID = "NEXTACT_ID";
	public static String PROP_PROCACT_ID = "PROCACT_ID";
	public static String PROP_TRANS_RULE = "TRANS_RULE";
	
	/**
	 * primary key field of nextactId
	 */
	@FieldMapping(columnName = "NEXTACT_ID", columnType = 4, primary = true)
	private Integer nextactId;
	/**
	 * primary key field of procactId
	 */
	@FieldMapping(columnName = "PROCACT_ID", columnType = 4, primary = true)
	private Integer procactId;
	@FieldMapping(columnName = "FIELD_1", columnType = 12)
	private String field1;
	@FieldMapping(columnName = "TRANS_RULE", columnType = 12)
	private String transRule;
	
	public Transition() {
		super();
	}

	public Transition(Integer nextactId, Integer procactId) {
		this.nextactId = nextactId;
		this.procactId = procactId;
	}

	/**
	 * @return the field1
	 */
	public String getField1() {
		return this.field1;
	}
	
	/**
	 * @param field1 the field1 to set
	 */
	public void setField1(String field1) {
		this.field1 = field1;
	}

	/**
	 * @return the nextactId
	 */
	public Integer getNextactId() {
		return this.nextactId;
	}
	
	/**
	 * @param nextactId the nextactId to set
	 */
	public void setNextactId(Integer nextactId) {
		this.nextactId = nextactId;
	}

	/**
	 * @return the procactId
	 */
	public Integer getProcactId() {
		return this.procactId;
	}
	
	/**
	 * @param procactId the procactId to set
	 */
	public void setProcactId(Integer procactId) {
		this.procactId = procactId;
	}

	/**
	 * @return the transRule
	 */
	public String getTransRule() {
		return this.transRule;
	}
	
	/**
	 * @param transRule the transRule to set
	 */
	public void setTransRule(String transRule) {
		this.transRule = transRule;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof Transition)) {
			return false;
		}
		Transition other = (Transition)o;
		if (null == this.nextactId) {
			if (other.nextactId != null)
				return false;
		} else if (!this.nextactId.equals(other.nextactId))
			return false;
		if (null == this.procactId) {
			if (other.procactId != null)
				return false;
		} else if (!this.procactId.equals(other.procactId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((nextactId == null) ? 0 : nextactId.hashCode());
		result = prime * result + ((procactId == null) ? 0 : procactId.hashCode());
		return result;
	}
	
}