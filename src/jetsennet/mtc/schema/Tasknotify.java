/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.mtc.schema.Tasknotify.java
 * 日 期：Thu Oct 09 15:06:53 CST 2014
 */
package jetsennet.mtc.schema;

import java.io.Serializable;
import java.util.Date;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * MTC_TASKNOTIFY
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "MTC_TASKNOTIFY", keyGenerator = "java.util.UUID")
public class Tasknotify implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_CREATE_TIME = "CREATE_TIME";
	public static String PROP_NOTIFY_CONTENT = "NOTIFY_CONTENT";
	public static String PROP_NOTIFY_ID = "NOTIFY_ID";
	public static String PROP_NOTIFY_URL = "NOTIFY_URL";
	public static String PROP_TASK_ID = "TASK_ID";
	
	/**
	 * primary key field of notifyId
	 */
	@FieldMapping(columnName = "NOTIFY_ID", columnType = 12, primary = true)
	private String notifyId;
	@FieldMapping(columnName = "CREATE_TIME", columnType = 93)
	private Date createTime;
	@FieldMapping(columnName = "NOTIFY_CONTENT", columnType = 2005)
	private String notifyContent;
	@FieldMapping(columnName = "NOTIFY_URL", columnType = 12)
	private String notifyUrl;
	@FieldMapping(columnName = "TASK_ID", columnType = 12)
	private String taskId;
	
	public Tasknotify() {
		super();
	}

	public Tasknotify(String notifyId) {
		this.notifyId = notifyId;
	}

	public Tasknotify(Date createTime, String taskId) {
		this.createTime = createTime;
		this.taskId = taskId;
	}

	/**
	 * @return the createTime
	 */
	public Date getCreateTime() {
		return this.createTime;
	}
	
	/**
	 * @param createTime the createTime to set
	 */
	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	/**
	 * @return the notifyContent
	 */
	public String getNotifyContent() {
		return this.notifyContent;
	}
	
	/**
	 * @param notifyContent the notifyContent to set
	 */
	public void setNotifyContent(String notifyContent) {
		this.notifyContent = notifyContent;
	}

	/**
	 * @return the notifyId
	 */
	public String getNotifyId() {
		return this.notifyId;
	}
	
	/**
	 * @param notifyId the notifyId to set
	 */
	public void setNotifyId(String notifyId) {
		this.notifyId = notifyId;
	}

	/**
	 * @return the notifyUrl
	 */
	public String getNotifyUrl() {
		return this.notifyUrl;
	}
	
	/**
	 * @param notifyUrl the notifyUrl to set
	 */
	public void setNotifyUrl(String notifyUrl) {
		this.notifyUrl = notifyUrl;
	}

	/**
	 * @return the taskId
	 */
	public String getTaskId() {
		return this.taskId;
	}
	
	/**
	 * @param taskId the taskId to set
	 */
	public void setTaskId(String taskId) {
		this.taskId = taskId;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof Tasknotify)) {
			return false;
		}
		Tasknotify other = (Tasknotify)o;
		if (null == this.notifyId) {
			if (other.notifyId != null)
				return false;
		} else if (!this.notifyId.equals(other.notifyId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((notifyId == null) ? 0 : notifyId.hashCode());
		return result;
	}
	
}