/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：jetsennet.mtc.schema.Formattemplate.java
 * 日 期：Thu Oct 09 15:06:53 CST 2014
 */
package jetsennet.mtc.schema;

import java.io.Serializable;
import java.util.Date;

import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * MTC_FORMATTEMPLATE
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "MTC_FORMATTEMPLATE", keyGenerator = "java.util.UUID")
public class FormatTemplate implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_FIELD_1 = "FIELD_1";
	public static String PROP_FIELD_2 = "FIELD_2";
	public static String PROP_FORMAT_DATA = "FORMAT_DATA";
	public static String PROP_FORMAT_ID = "FORMAT_ID";
	public static String PROP_FORMAT_NAME = "FORMAT_NAME";
	public static String PROP_FORMAT_TYPE = "FORMAT_TYPE";
	public static String PROP_FORMAT_VER = "FORMAT_VER";
	public static String PROP_MODIFY_TIME = "MODIFY_TIME";
	
	/**
	 * primary key field of formatId
	 */
	@FieldMapping(columnName = "FORMAT_ID", columnType = 12, primary = true)
	private String formatId;
	@FieldMapping(columnName = "FIELD_1", columnType = 12)
	private String field1;
	@FieldMapping(columnName = "FIELD_2", columnType = 12)
	private String field2;
	@FieldMapping(columnName = "FORMAT_DATA", columnType = 2005)
	private String formatData;
	@FieldMapping(columnName = "FORMAT_NAME", columnType = 12)
	private String formatName;
	@FieldMapping(columnName = "FORMAT_TYPE", columnType = 12)
	private String formatType;
	@FieldMapping(columnName = "FORMAT_VER", columnType = 12)
	private String formatVer;
	@FieldMapping(columnName = "MODIFY_TIME", columnType = 93)
	private Date modifyTime;
	
	public FormatTemplate() {
		super();
	}

	public FormatTemplate(String formatId) {
		this.formatId = formatId;
	}

	/**
	 * @return the field1
	 */
	public String getField1() {
		return this.field1;
	}
	
	/**
	 * @param field1 the field1 to set
	 */
	public void setField1(String field1) {
		this.field1 = field1;
	}

	/**
	 * @return the field2
	 */
	public String getField2() {
		return this.field2;
	}
	
	/**
	 * @param field2 the field2 to set
	 */
	public void setField2(String field2) {
		this.field2 = field2;
	}

	/**
	 * @return the formatData
	 */
	public String getFormatData() {
		return this.formatData;
	}
	
	/**
	 * @param formatData the formatData to set
	 */
	public void setFormatData(String formatData) {
		this.formatData = formatData;
	}

	/**
	 * @return the formatId
	 */
	public String getFormatId() {
		return this.formatId;
	}
	
	/**
	 * @param formatId the formatId to set
	 */
	public void setFormatId(String formatId) {
		this.formatId = formatId;
	}

	/**
	 * @return the formatName
	 */
	public String getFormatName() {
		return this.formatName;
	}
	
	/**
	 * @param formatName the formatName to set
	 */
	public void setFormatName(String formatName) {
		this.formatName = formatName;
	}

	/**
	 * @return the formatType
	 */
	public String getFormatType() {
		return this.formatType;
	}
	
	/**
	 * @param formatType the formatType to set
	 */
	public void setFormatType(String formatType) {
		this.formatType = formatType;
	}

	/**
	 * @return the formatVer
	 */
	public String getFormatVer() {
		return this.formatVer;
	}
	
	/**
	 * @param formatVer the formatVer to set
	 */
	public void setFormatVer(String formatVer) {
		this.formatVer = formatVer;
	}

	/**
	 * @return the modifyTime
	 */
	public Date getModifyTime() {
		return this.modifyTime;
	}
	
	/**
	 * @param modifyTime the modifyTime to set
	 */
	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof FormatTemplate)) {
			return false;
		}
		FormatTemplate other = (FormatTemplate)o;
		if (null == this.formatId) {
			if (other.formatId != null)
				return false;
		} else if (!this.formatId.equals(other.formatId))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((formatId == null) ? 0 : formatId.hashCode());
		return result;
	}
	
}